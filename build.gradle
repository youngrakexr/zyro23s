buildscript {
	ext {
		grailsVersion = "3.0.0.BUILD-SNAPSHOT"
		springVersion = "4.1.4.RELEASE"
	}
	repositories {
		mavenLocal()
		maven { url "http://repo.grails.org/grails/core" }
	}
	dependencies {
		classpath "org.grails:grails-gradle-plugin:$grailsVersion"
		classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.1.0"
	}
}

plugins {
	id "io.spring.dependency-management" version "0.3.1.RELEASE"
}

version "2.0.0.BUILD-SNAPSHOT"
group "org.grails.plugins"

apply plugin: "spring-boot"
apply plugin: "asset-pipeline"
apply plugin: "grails-plugin"
apply plugin: "grails-gsp"
apply plugin: "maven"
apply plugin: "maven-publish"
apply plugin: "eclipse"
apply plugin: "idea"
	
repositories {
	mavenLocal()
	mavenCentral()
	maven { url "http://repo.grails.org/grails/core" }
}

dependencyManagement {
	imports {
		mavenBom "org.grails:grails-bom:$grailsVersion"
	}
	applyMavenExclusions false
}

dependencies {
	provided "javax.servlet:javax.servlet-api:3.1.0"
	provided "org.grails:grails-dependencies"
	provided "org.grails:grails-web-boot"
	provided "org.springframework.boot:spring-boot-autoconfigure"
	provided "org.springframework.boot:spring-boot-starter-actuator"
	provided "org.springframework.boot:spring-boot-starter-logging"
	provided "org.springframework.boot:spring-boot-starter-tomcat"
	
	compile "com.fasterxml.jackson.core:jackson-databind:2.4.4"
	compile "org.springframework:spring-messaging:$springVersion"
	compile "org.springframework:spring-websocket:$springVersion"
	
	testCompile "org.grails:grails-plugin-testing"
	
	console "org.grails:grails-console"
}

eclipse.classpath.plusConfigurations += [configurations.provided]

idea.module.scopes.PROVIDED.plus += [configurations.provided]

publishing {
	publications {
		maven(MavenPublication) {
			artifactId "spring-websocket"
			from components.java
			artifact sourcesJar
			artifact javadocJar
			artifact source: "${sourceSets.main.output.classesDir}/META-INF/grails-plugin.xml", classifier: "plugin", extension: "xml"
		}
	}
	repositories {
		maven {
			credentials {
				def user = System.getenv('GRAILS_CENTRAL_USERNAME') ?: project.properties.get('grailsPluginsUsername')
				def pass = System.getenv("GRAILS_CENTRAL_PASSWORD") ?: project.properties.get('grailsPluginsPassword')
				username user
				password pass
			}
			if (version.endsWith("-SNAPSHOT")) {
				url "https://repo.grails.org/grails/plugins3-snapshots-local"
			} else {
				url "https://repo.grails.org/grails/plugins3-releases-local"
			}
		}
	}
}

run {
	minHeapSize = "768m"
	maxHeapSize = "768m"
	if (!org.gradle.api.JavaVersion.current().java8Compatible) {
		jvmArgs "-XX:PermSize=96m", "-XX:MaxPermSize=256m"
	}
	jvmArgs "-XX:+TieredCompilation", "-XX:TieredStopAtLevel=1", "-XX:CICompilerCount=3"
}

task wrapper(type: Wrapper) {
	gradleVersion = "2.3-20141120230022+0000"
}
